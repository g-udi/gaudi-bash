#!/usr/bin/env bash
# shellcheck shell=bash

declare GAUDI_BATS GAUDI_TEST_DIRECTORY

GAUDI_TEST_DIRECTORY="$(cd "${BASH_SOURCE%/*}" && pwd)"
GAUDI_BATS="${GAUDI_TEST_DIRECTORY}/../bin/bats-core/bin/bats"

git submodule init && git submodule update

if [[ -z "${GAUDI_BASH}" ]]; then
	declare GAUDI_BASH
	GAUDI_BASH=$(cd "${GAUDI_TEST_DIRECTORY%/*}" && pwd)
	export GAUDI_BASH
fi

echo -e "
\033c
 ██████╗  █████╗ ██╗   ██╗██████╗ ██╗      ██████╗  █████╗ ███████╗██╗  ██╗
██╔════╝ ██╔══██╗██║   ██║██╔══██╗██║      ██╔══██╗██╔══██╗██╔════╝██║  ██║
██║  ███╗███████║██║   ██║██║  ██║██║█████╗██████╔╝███████║███████╗███████║
██║   ██║██╔══██║██║   ██║██║  ██║██║╚════╝██╔══██╗██╔══██║╚════██║██╔══██║
╚██████╔╝██║  ██║╚██████╔╝██████╔╝██║      ██████╔╝██║  ██║███████║██║  ██║
 ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚═════╝ ╚═╝      ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝


Running gaudi-bash unit tests.. \n\n"

export GAUDI_TEST_DIRECTORY GAUDI_BATS

bash "$GAUDI_TEST_DIRECTORY"/runners/run-bats.bash
bash "$GAUDI_TEST_DIRECTORY"/runners/run-search.bash
